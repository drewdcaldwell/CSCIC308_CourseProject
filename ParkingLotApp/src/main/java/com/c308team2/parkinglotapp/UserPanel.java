/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.c308team2.parkinglotapp;

import java.awt.CardLayout;


public class UserPanel extends javax.swing.JPanel {
    private User currentUser;

    /**
     * Creates new form UserPanel
     */
    public UserPanel() {
        if(currentUser == null) currentUser = new Customer("TestFirst", "TestLast", "TESTPL", "testuser", "testpass");
        initComponents();
    }
    
    public void updateUser(User user){
        // method to update panel with given User
        currentUser = user;
        updateInfo();
    }
    
    public void updateInfo(){
        // method to update the page
        
        // update text fields
        usernameLabel.setText(currentUser.getAccount());
        firstNameField.setText(currentUser.getFirstName());
        lastNameField.setText(currentUser.getLastName());
        plateField.setText(currentUser.getPlateNumber());
        
        // get current user type
        int userType = currentUser.getUserType();
        
        // update combobox selection based on userType
        switch(userType){
            case User.CUSTOMER:
                userTypeComboBox.setSelectedIndex(0);
                break;
            case User.STAFF:
                userTypeComboBox.setSelectedIndex(1);
                break;
            case User.ADMIN:
                userTypeComboBox.setSelectedIndex(2);
                break;
            case User.SUPER_ADMIN:
                userTypeComboBox.setSelectedIndex(3);
                break;
        }
        
        // update Staff buttons
        updateButtons();
        
        // clear info label
        infoLabel.setText("   ");
    }

    public void updateButtons(){
        // update Staff buttons
        // get currentLot
        ParkingLot currentLot = (ParkingLot) lotComboBox.getSelectedItem();
        // Check if currentUser is Staff at currentLot
        boolean isStaff = currentLot.checkStaff(currentUser);
        
        // Update buttons accordingly
        if(isStaff){
            // currentUser is staff 
            // disable add button, enable remove button
            addStaffButton.setEnabled(false);
            removeStaffButton.setEnabled(true);
        } else {
            // currentUser is not staff
            // enable add button, disable remove button
            addStaffButton.setEnabled(true);
            removeStaffButton.setEnabled(false);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        firstNameLabel = new javax.swing.JLabel();
        firstNameField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameField = new javax.swing.JTextField();
        plateLabel = new javax.swing.JLabel();
        plateField = new javax.swing.JTextField();
        typeLabel = new javax.swing.JLabel();
        userTypeComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        backButtonLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        infoLabel = new javax.swing.JLabel();
        lotComboBox = new javax.swing.JComboBox<>();
        addStaffButton = new javax.swing.JButton();
        removeStaffButton = new javax.swing.JButton();
        usernameLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1080, 720));

        firstNameLabel.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        firstNameLabel.setText("First Name:");

        lastNameLabel.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        lastNameLabel.setText("Last Name:");

        plateLabel.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        plateLabel.setText("Plate Number:");

        typeLabel.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        typeLabel.setText("User Type:");

        userTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Customer", "Staff", "Admin", "Super Admin" }));

        jLabel1.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        jLabel1.setText("Add or Remove as Staff from Lot:");

        backButtonLabel.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        backButtonLabel.setForeground(new java.awt.Color(0, 102, 255));
        backButtonLabel.setText("< Back");
        backButtonLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonLabelMouseClicked(evt);
            }
        });

        saveButton.setText("Save Changes");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        infoLabel.setText("   ");

        lotComboBox.setModel(Database.lotCB);
        lotComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lotComboBoxActionPerformed(evt);
            }
        });

        addStaffButton.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        addStaffButton.setText("Add Staff");
        addStaffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStaffButtonActionPerformed(evt);
            }
        });

        removeStaffButton.setFont(new java.awt.Font("Malgun Gothic", 0, 12)); // NOI18N
        removeStaffButton.setText("Remove Staff");
        removeStaffButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeStaffButtonActionPerformed(evt);
            }
        });

        usernameLabel.setFont(new java.awt.Font("Malgun Gothic", 0, 18)); // NOI18N
        usernameLabel.setText("username");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveButton)
                    .addComponent(backButtonLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstNameLabel)
                                    .addComponent(lastNameLabel)
                                    .addComponent(plateLabel))
                                .addGap(221, 221, 221))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lastNameField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstNameField))
                                .addGap(112, 112, 112)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addStaffButton)
                                .addGap(18, 18, 18)
                                .addComponent(removeStaffButton))
                            .addComponent(lotComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(userTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeLabel)))
                    .addComponent(infoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plateField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(460, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(backButtonLabel)
                .addGap(65, 65, 65)
                .addComponent(usernameLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel)
                    .addComponent(typeLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lotComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plateLabel)
                    .addComponent(addStaffButton)
                    .addComponent(removeStaffButton))
                .addGap(18, 18, 18)
                .addComponent(plateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179)
                .addComponent(infoLabel)
                .addGap(18, 18, 18)
                .addComponent(saveButton)
                .addContainerGap(82, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonLabelMouseClicked
        // method called when Back button is pressed
        
        // go back to displaying userListCard
        CardLayout card = (CardLayout) getParent().getLayout();
        card.show(getParent(), "userListCard");
    }//GEN-LAST:event_backButtonLabelMouseClicked

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // method called when saveButton is pressed
        
        // get user entered information
        String firstName = firstNameField.getText();
        String lastName = lastNameField.getText();
        String plateNumber = plateField.getText();
        int newUserType = userTypeComboBox.getSelectedIndex();
        
        // update any changed information
        if(!firstName.equals(currentUser.getFirstName())) 
            currentUser.setFirstName(firstName);
        
        if(!lastName.equals(currentUser.getLastName()))
            currentUser.setLastName(lastName);
        
        if(!plateNumber.equals(currentUser.getPlateNumber()))
            currentUser.setPlateNumber(plateNumber);
        
        if(newUserType != currentUser.getUserType()) {
            // update userType
            currentUser.setUserType(newUserType);
            // if new type is Customer, remove as Staff from all lots
            if(newUserType == User.CUSTOMER) Database.removeStaff(currentUser);
        }
        
        
        infoLabel.setText("User successfully updated.");
        
        // updateButtons() in case they change
        updateButtons();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void addStaffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStaffButtonActionPerformed
        // method called when Add Staff button is pressed
        
        // get the selected lot
        ParkingLot currentLot = (ParkingLot) lotComboBox.getSelectedItem();
        
        // add currentUser to staff list of currentLot
        currentLot.addStaff(currentUser);
        
        // update userType to Staff if currentUser is Customer
        if(currentUser.getUserType() == User.CUSTOMER) currentUser.setUserType(User.STAFF);
        
        // update infoLabel to alert User
        infoLabel.setText("User successfully added as Staff.");
        
        // update Staff buttons
        addStaffButton.setEnabled(false);
        removeStaffButton.setEnabled(true);
        
        // updateInfo in case userType changed
        updateInfo();
    }//GEN-LAST:event_addStaffButtonActionPerformed

    private void removeStaffButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeStaffButtonActionPerformed
        // method called when Remove Staff button is pressed
        
        // get the selected lot
        ParkingLot currentLot = (ParkingLot) lotComboBox.getSelectedItem();
        
        // remove currentUser from staff list of currentLot
        currentLot.removeStaff(currentUser);
        
        // update userType to Customer if currentUser was Staff but is no longer
        if(currentUser.getUserType() == User.STAFF){
            // update userType if currentUser is not Staff
            if(!Database.checkStaff(currentUser)) currentUser.setUserType(User.CUSTOMER);
        }
        
        // update infoLabel to alert User
        infoLabel.setText("User successfully removed as Staff.");
        
        // update Staff buttons
        addStaffButton.setEnabled(true);
        removeStaffButton.setEnabled(false);
        
        // updateInfo in case userType changed
        updateInfo();
    }//GEN-LAST:event_removeStaffButtonActionPerformed

    private void lotComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lotComboBoxActionPerformed
        // method called when a lot is selected in lotComboBox
        
        // get selected lot
        ParkingLot currentLot = (ParkingLot) lotComboBox.getSelectedItem();
        
        // Check if currentUser is Staff at currentLot
        boolean isStaff = currentLot.checkStaff(currentUser);
        
        // Update buttons accordingly
        if(isStaff){
            // currentUser is staff 
            // disable add button, enable remove button
            addStaffButton.setEnabled(false);
            removeStaffButton.setEnabled(true);
        } else {
            // currentUser is not staff
            // enable add button, disable remove button
            addStaffButton.setEnabled(true);
            removeStaffButton.setEnabled(false);
        }
    }//GEN-LAST:event_lotComboBoxActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addStaffButton;
    private javax.swing.JLabel backButtonLabel;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JComboBox<ParkingLot> lotComboBox;
    private javax.swing.JTextField plateField;
    private javax.swing.JLabel plateLabel;
    private javax.swing.JButton removeStaffButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JComboBox<String> userTypeComboBox;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
